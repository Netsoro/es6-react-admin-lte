{"version":3,"sources":["../../../src/js/components/charts/line-chart.jsx"],"names":["LineChart","theDatasets","props","datasets","label","datasetLabel","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderWidth","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointStyle","showLine","data","xAxisID","yAxisID","labels","axisLabels","ctx","document","getElementById","id","getContext","line","type","options","width","height","Component","propTypes","string","array","number","bool","oneOfType","object","defaultProps","legend","display"],"mappings":"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","file":"line-chart.js","sourcesContent":["import React from 'react';\nimport Chart from 'chart.js';\nimport PropTypes from 'prop-types';\n\nclass LineChart extends React.Component {\n  componentDidMount() {\n    let theDatasets;\n    if (this.props.datasets) {\n      theDatasets = this.props.datasets;\n    } else {\n      theDatasets = [{\n          label: this.props.datasetLabel,\n          fill: this.props.fill,\n          lineTension: this.props.lineTension,\n          backgroundColor: this.props.backgroundColor,\n          borderColor: this.props.borderColor,\n          borderCapStyle: this.props.borderCapStyle,\n          borderWidth: this.props.borderWidth,\n          pointBorderColor: this.props.pointBorderColor,\n          pointBackgroundColor: this.props.pointBackgroundColor,\n          pointBorderWidth: this.props.pointBorderWidth,\n          pointHoverRadius: this.props.pointHoverRadius,\n          pointHoverBackgroundColor: this.props.pointHoverBackgroundColor,\n          pointHoverBorderColor: this.props.pointHoverBorderColor,\n          pointHoverBorderWidth: this.props.pointHoverBorderWidth,\n          pointRadius: this.props.pointRadius,\n          pointStyle: this.props.pointStyle,\n          showLine: this.props.showLine,\n          data: this.props.data,\n          xAxisID: this.props.xAxisID,\n          yAxisID: this.props.yAxisID\n      }];\n    }\n    const data = {\n      labels: this.props.axisLabels,\n      datasets: theDatasets\n    };\n    const ctx = document.getElementById(this.props.id).getContext('2d');\n    const line = new Chart(ctx, {\n      type: 'line',\n      options: this.props.options,\n      data\n    });\n  }\n\n  render() {\n    return (\n      <canvas id={this.props.id} width={this.props.width} height={this.props.height} />\n    );\n  }\n}\n\nLineChart.propTypes = {\n  id: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  datasets: PropTypes.array,\n  datasetLabel: PropTypes.string,\n  axisLabels: PropTypes.array,\n  lineTension: PropTypes.number,\n  data: PropTypes.array,\n  backgroundColor: PropTypes.string,\n  borderColor: PropTypes.string,\n  borderCapStyle: PropTypes.string,\n  borderWidth: PropTypes.number,\n  fill: PropTypes.bool,\n  pointBackgroundColor: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.string\n  ]),\n  pointBorderColor: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.string\n  ]),\n  pointBorderWidth: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number\n  ]),\n  pointRadius: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number\n  ]),\n  pointHoverRadius: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number\n  ]),\n  pointHoverBackgroundColor: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.string\n  ]),\n  pointHoverBorderColor: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.string\n  ]),\n  pointHoverBorderWidth: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.number\n  ]),\n  pointStyle: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.string\n  ]),\n  showLine: PropTypes.bool,\n  xAxisID: PropTypes.string,\n  yAxisID: PropTypes.string,\n  options: PropTypes.object\n};\n\nLineChart.defaultProps = {\n  id: 'line-chart-0',\n  width: '300',\n  height: '200',\n  lineTension: 0,\n  fill: false,\n  showLine: false,\n  pointStyle: 'circle',\n  options: {\n    legend: {\n      display: false,\n        labels: {\n          display: false\n        }\n    }\n  }\n};\n\nexport default LineChart;\n"]}