{"version":3,"sources":["../../../../src/js/components/form/common/login-form.jsx"],"names":["LoginForm","props","state","username","password","rememberMe","fillForm","bind","submitForm","e","preventDefault","stopPropagation","onSubmit","currentTarget","id","setState","value","checked","error","message","errorTheme","logoLink","onLogoClick","clientLogo","clientName","width","height","position","headline","subheadline","userPlaceholder","passPlaceholder","remembers","rememberMeText","submitTheme","submitText","forgets","forgetLink","onForget","registers","registerLink","onRegister","children","loading","backgroundColor","top","right","bottom","left","display","alignItems","justifyContent","Component","propTypes","bool","string","object","oneOfType","element","func","defaultProps","code","origin"],"mappings":"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","file":"login-form.js","sourcesContent":["import React from 'react';\nimport LoadStatus from '../../utilities/load-status.jsx';\nimport ErrorMessage from '../../utilities/error-message.jsx';\nimport PropTypes from 'prop-types';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      rememberMe: false\n    };\n    this.fillForm = this.fillForm.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onSubmit(this.state.username, this.state.password, this.state.rememberMe);\n  }\n\n  fillForm(e) {\n    switch (e.currentTarget.id) {\n      case ('username'):\n        this.setState({ username: e.currentTarget.value });\n        break;\n      case ('password'):\n        this.setState({ password: e.currentTarget.value });\n        break;\n      case ('remember-me'):\n        this.setState({ rememberMe: e.currentTarget.checked });\n        break;\n      default: break;\n    }\n  }\n\n  render() {\n    const error = this.props.error.message === null ? '' : (\n      <ErrorMessage error={this.props.error} theme={this.props.errorTheme} />\n    );\n    return (\n      <div className=\"login-box\">\n        <div className=\"login-logo\">\n          <a\n            href={this.props.logoLink}\n            onClick={this.props.onLogoClick ? e => {\n              e.preventDefault();\n              e.stopPropagation();\n              this.props.onLogoClick();\n            } : () => {}}\n          >\n            {this.props.clientLogo ? <img src={this.props.clientLogo} alt={typeof this.props.clientName === 'string' ? this.props.clientName : 'Brand Logo'} style={{ width: '60%', height: 'auto' }} /> : this.props.clientName}\n          </a>\n        </div>\n        <div className=\"login-box-body\" style={{ position: 'relative' }}>\n          <div className=\"login-box-body-head\">\n            {error}\n            <p className=\"login-box-msg\">\n              {this.props.headline}\n              {this.props.subheadline ? (<small><br />{this.props.subheadline}</small>) : ''}\n            </p>\n          </div>\n          <form noValidate onSubmit={this.submitForm}>\n            <div className=\"form-group has-feedback\">\n              <input\n                id=\"username\"\n                type=\"text\"\n                className=\"form-control\"\n                placeholder={this.props.userPlaceholder}\n                onChange={this.fillForm}\n              />\n              <span className=\"glyphicon glyphicon-envelope form-control-feedback\" />\n            </div>\n            <div className=\"form-group has-feedback\">\n              <input\n                id=\"password\"\n                type=\"password\"\n                className=\"form-control\"\n                placeholder={this.props.passPlaceholder}\n                onChange={this.fillForm}\n              />\n              <span className=\"glyphicon glyphicon-lock form-control-feedback\" />\n            </div>\n            <div className=\"row\">\n              {this.props.remembers ? (\n                <div className=\"col-xs-8\">\n                  <div className=\"checkbox icheck\">\n                    <label htmlFor=\"remember-me\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"remember-me\"\n                        defaultChecked={false}\n                        onChange={this.fillForm}\n                      />\n                      {this.props.rememberMeText}\n                    </label>\n                  </div>\n                </div>\n              ) : ''}\n              <div className=\"col-xs-offset-8 col-xs-4\">\n                <button\n                  type=\"submit\"\n                  className={`btn btn-block btn-flat ${this.props.submitTheme}`}\n                  onClick={this.submitForm}\n                  id=\"login-btn\"\n                >\n                  {this.props.submitText}\n                </button>\n              </div>\n            </div>\n          </form>\n          {this.props.forgets ? (\n            <a\n              href={this.props.forgetLink}\n              onClick={this.props.onForget ? e => {\n                e.preventDefault();\n                e.stopPropagation();\n                this.props.onForget();\n              } : () => {}}\n            >\n              I forgot my password\n            </a>\n          ) : ''}\n          {this.props.forgets && this.props.registers ? <br /> : ''}\n          {this.props.registers ? (\n            <a\n              href={this.props.registerLink}\n              className=\"text-center\"\n              onClick={this.props.onRegister ? e => {\n                e.preventDefault();\n                e.stopPropagation();\n                this.props.onRegister();\n              } : () => {}}\n            >\n              Register an account\n            </a>\n          ) : ''}\n          <div className=\"row\">\n            {this.props.children}\n          </div>\n          {!this.props.loading ? '' : (\n            <div\n              className=\"text-center align-middle overlay over-load\"\n              style={{\n                position: 'absolute',\n                backgroundColor: 'rgba(236, 240, 245, 0.25)',\n                top: '0', right: '0', bottom: '0', left: '0',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n              }}\n            >\n              <LoadStatus size=\"5em\" color=\"rgba(51, 51, 51, 0.3)\" spins />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  loading: PropTypes.bool,\n  errorTheme: PropTypes.string,\n  error: PropTypes.object,\n  clientName: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  clientLogo: PropTypes.string,\n  onLogoClick: PropTypes.func,\n  logoLink: PropTypes.string,\n  headline: PropTypes.string,\n  subheadline: PropTypes.string,\n  remembers: PropTypes.bool,\n  rememberMeText: PropTypes.string,\n  submitText: PropTypes.string,\n  submitTheme: PropTypes.string,\n  onSubmit: PropTypes.func,\n  userPlaceholder: PropTypes.string,\n  passPlaceholder: PropTypes.string,\n  forgets: PropTypes.bool,\n  registers: PropTypes.bool,\n  forgetLink: PropTypes.string,\n  onForget: PropTypes.func,\n  registerLink: PropTypes.string,\n  onRegister: PropTypes.func\n};\n\nLoginForm.defaultProps = {\n  loading: false,\n  errorTheme: 'alert-danger',\n  error: {\n    message: null,\n    code: null,\n    origin: null\n  },\n  clientName: <span><b>Admin</b>LTE</span>,\n  clientLogo: '',\n  headline: 'Sign in to start your session',\n  subheadline: '',\n  remembers: false,\n  rememberMeText: 'Remember Me',\n  submitText: 'Sign In',\n  submitTheme: 'btn-primary',\n  userPlaceholder: 'Email',\n  passPlaceholder: 'Password',\n  forgets: false,\n  registers: false,\n  onSubmit: () => {}\n};\n\nexport default LoginForm;\n"]}